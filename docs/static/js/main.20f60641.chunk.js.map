{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OAEQ,sBAAMC,SAdM,SAACC,GACjBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAQd,SAEA,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAvBiB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,aA8B/BZ,EAAYe,UAAW,CACnBd,c,OAAee,EAAUC,KAAKC,Y,mCCpClBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACqCC,UAAWH,GADhD,+DAECI,MAAOF,GAFR,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAaXM,GAbW,4CAAH,sDCDVO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAMA,EAAN,WCHCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECCX,SAACA,GAAc,IAAD,EACblB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KA0BvC,OAnBCC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAC,GAGFH,EAAS,CACTf,KAAMkB,EACNL,SAAS,SAOf,CAACpB,IAIGqB,EDxBuBK,CAAa1B,GAA9Ba,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAGnB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEhBhBgB,EAAe,WAAO,IAAD,EAEE7C,mBAAS,CAAC,cAFZ,mBAE3B8C,EAF2B,KAEf/C,EAFe,KAU9B,OACQ,qCACA,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCrB7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.20f60641.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange= (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit =(e) => {\r\n        e.preventDefault();\r\n    \r\n        // console.log('submit hecho')\r\n        if(inputValue.trim().length >2){\r\n            setCategories(cats => [inputValue,...cats,]); //agrega lo del input a la lista\r\n            setInputValue(''); //borra el input\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        \r\n            <form onSubmit={handleSubmit}>\r\n\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n                \r\n            </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.prototype= {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n export   const getGifs = async(category) =>{\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category) }&limit=10&api_key=DEMcQhlAl2RIfO5bqRcPH5rXotloFtgD`;\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n        \r\n\r\n        const gifs = data.map(img =>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }  \r\n        })\r\n        return gifs;\r\n    }\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n            <img src={url} alt={title}/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState,useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n import { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    \r\n    const {data:images,loading}= useFetchGifs(category);\r\n    \r\n \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n            {\r\n                images.map(img => (\r\n                    <GifGridItem \r\n                    key={img.id}\r\n                    {...img}/>\r\n                ) )\r\n            }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n \r\nexport const useFetchGifs = (category) => {\r\n   const [state, setstate] = useState({\r\n       data: [],\r\n       loading: true\r\n   })\r\n\r\n   \r\n    useEffect(() => {\r\n        \r\n        getGifs(category)\r\n        .then(imgs => {\r\n\r\n           \r\n            setstate({\r\n            data: imgs,\r\n            loading: false \r\n            })\r\n            \r\n    \r\n        })\r\n\r\n\r\n    },[category])\r\n\r\n\r\n   \r\n   return state; //{data: [] , loading : true};\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\nconst [categories, setCategories] = useState(['One Punch'])\r\n    \r\n    \r\n    // const handleAdd = () => {\r\n    //     //'hunterXhunter'\r\n    //     // setCategories(['hunterXhunter', ...categories,]);\r\n    //     setCategories(cats => [...cats ,'hunterXhunter']);\r\n    // }\r\n    return (\r\n            <>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n  \r\n            \r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category  => (\r\n                        <GifGrid  \r\n                        key={category}\r\n                        category={category}\r\n                         />\r\n                    ))\r\n                }\r\n            </ol>\r\n                 \r\n            \r\n            </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}